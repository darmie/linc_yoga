/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @Generated by gentest/gentest.rb from gentest/fixtures/YogaPaddingSpec.html


using facebook.yoga.Enums;

import facebook.Yoga;

import facebook.yoga.*;

import utest.Assert;

class YogaPaddingSpec {

  public function new(){}
  public function test_padding_no_size() {
    var config = Config.init();

    var root = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetPadding(root, Edge.Left, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Top, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Right, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Bottom, 10);
    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.LTR);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(20, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(20, Yoga.nodeLayoutGetHeight(root));

    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.RTL);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(20, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(20, Yoga.nodeLayoutGetHeight(root));
  }

  public function test_padding_container_match_child() {
    var config = Config.init();

    var root = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetPadding(root, Edge.Left, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Top, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Right, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Bottom, 10);

    var root_child0 = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.LTR);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(30, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(30, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(10, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetHeight(root_child0));

    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.RTL);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(30, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(30, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(10, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetHeight(root_child0));
  }

  public function test_padding_flex_child() {
    var config = Config.init();

    var root = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetPadding(root, Edge.Left, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Top, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Right, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Bottom, 10);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.LTR);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(10, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(80, Yoga.nodeLayoutGetHeight(root_child0));

    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.RTL);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(80, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(80, Yoga.nodeLayoutGetHeight(root_child0));
  }

  public function test_padding_stretch_child() {
    var config = Config.init();

    var root = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetPadding(root, Edge.Left, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Top, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Right, 10);
    Yoga.nodeStyleSetPadding(root, Edge.Bottom, 10);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.LTR);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(10, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(80, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetHeight(root_child0));

    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.RTL);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(10, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(80, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetHeight(root_child0));
  }

  public function test_padding_center_child() {
    var config = Config.init();

    var root = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetJustifyContent(root, Justify.Center);
    Yoga.nodeStyleSetAlignItems(root, Align.Center);
    Yoga.nodeStyleSetPadding(root, Edge.Start, 10);
    Yoga.nodeStyleSetPadding(root, Edge.End, 20);
    Yoga.nodeStyleSetPadding(root, Edge.Bottom, 20);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.LTR);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(40, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(35, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetHeight(root_child0));

    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.RTL);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(50, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(35, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(10, Yoga.nodeLayoutGetHeight(root_child0));
  }

  public function test_child_with_padding_align_end() {
    var config = Config.init();

    var root = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetJustifyContent(root, Justify.FlexEnd);
    Yoga.nodeStyleSetAlignItems(root, Align.FlexEnd);
    Yoga.nodeStyleSetWidth(root, 200);
    Yoga.nodeStyleSetHeight(root, 200);

    var root_child0 = Yoga.newNodeWithConfig(config);
    Yoga.nodeStyleSetPadding(root_child0, Edge.Left, 20);
    Yoga.nodeStyleSetPadding(root_child0, Edge.Top, 20);
    Yoga.nodeStyleSetPadding(root_child0, Edge.Right, 20);
    Yoga.nodeStyleSetPadding(root_child0, Edge.Bottom, 20);
    Yoga.nodeStyleSetWidth(root_child0, 100);
    Yoga.nodeStyleSetHeight(root_child0, 100);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.LTR);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(200, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(200, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(100, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(100, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root_child0));

    Yoga.nodeCalculateLayout(root, Constants.Undefined, Constants.Undefined, Direction.RTL);

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root));
    Assert.floatEquals(0, Yoga.nodeLayoutGetTop(root));
    Assert.floatEquals(200, Yoga.nodeLayoutGetWidth(root));
    Assert.floatEquals(200, Yoga.nodeLayoutGetHeight(root));

    Assert.floatEquals(0, Yoga.nodeLayoutGetLeft(root_child0));
    Assert.floatEquals(100, Yoga.nodeLayoutGetTop(root_child0));
    Assert.floatEquals(100, Yoga.nodeLayoutGetWidth(root_child0));
    Assert.floatEquals(100, Yoga.nodeLayoutGetHeight(root_child0));
  }

}
